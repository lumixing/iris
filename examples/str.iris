data $str { u8 "hello", u8 0 }

extern $puts

func i32 $main() {
	call $puts(ptr $str)
	ret i32 0
}

func u32 $strlen(ptr %str) {
	u32 %len = copy u32 0
@loop:
	i8 %char = load ptr %str
	cmp i8 %char, i8 0
	jeq @break
	inc u32 %len
	inc ptr %str
@break:
	ret u32 %len
}

func u8 $streq(ptr %str1, ptr %str2) {
@loop:
	i8 %ch1 = load ptr %str1
	u8 %ch1n = cmp i8 %ch1, i8 0
	i8 %ch2 = load ptr %str2
	u8 %ch2n = cmp i8 %ch2, i8 0
	u8 %chn = and u8 %ch1n, u8 %ch2n
	cmp u8 %chn, u8 0
	jeq @break
	cmp i8 %ch1, i8 %ch2
	jeq @continue
	ret u8 0
@continue:
	inc ptr %str1
	inc ptr %str2
	jmp @loop
@break:
	i8 %ch1 = load ptr %str1
	i8 %ch2 = load ptr %str2
	u8 %cheq = cmp i8 %ch1, i8 %ch2
	ret u8 %cheq
}

func i32 $arrsum(ptr %nums, u32 %nums_len) {
	i32 %sum = copy i32 0
	u32 %i = copy u32 0
@loop:
	cmp u32 %i, u32 %nums_len
	jnl @break
	i32 %num = load ptr %nums
	add ptr %nums, ptr 4 ; sizeof(i32)
	inc u32 %i
	jmp @loop
@break:
	ret i32 %sum
}